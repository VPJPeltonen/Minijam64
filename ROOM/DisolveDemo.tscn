[gd_scene load_steps=18 format=2]

[ext_resource path="res://ROOM/noisetexture.tres" type="Texture" id=1]


[sub_resource type="PlaneMesh" id=1]

[sub_resource type="SphereMesh" id=2]

[sub_resource type="VisualShaderNodeScalarOp" id=10]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.05 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=11]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeVectorFunc" id=12]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 255, 50, 0 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=13]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=14]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeInput" id=3]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
output_port_for_preview = 0
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=6]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeTexture" id=15]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=16]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=17]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShader" id=8]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx;

uniform sampler2D tex_frg_7;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, n_out2p0.xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// Input:3
	float n_out3p0 = TIME;

// ScalarFunc:4
	float n_out4p0 = sin(n_out3p0);

// ScalarOp:5
	float n_in5p1 = 2.00000;
	float n_out5p0 = n_out4p0 / n_in5p1;

// ScalarOp:8
	float n_out8p0 = dot(n_out7p0, vec3(0.333333, 0.333333, 0.333333)) - n_out5p0;

// ScalarFunc:9
	float n_out9p0 = round(n_out8p0);

// ScalarOp:10
	float n_in10p1 = 0.05000;
	float n_out10p0 = n_out8p0 - n_in10p1;

// ScalarFunc:11
	float n_out11p0 = round(n_out10p0);

// ScalarOp:15
	float n_out15p0 = n_out9p0 - n_out11p0;

// VectorFunc:13
	vec3 n_in13p0 = vec3(255.00000, 50.00000, 0.00000);
	vec3 n_out13p0 = normalize(n_in13p0);

// VectorOp:14
	vec3 n_out14p0 = vec3(n_out15p0) * n_out13p0;

// Output:0
	ALPHA = n_out9p0;
	EMISSION = n_out14p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 178, 360 )
modes/cull = 2
modes/depth_draw = 3
nodes/fragment/0/position = Vector2( 1440, 180 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( -220, 100 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( -340, 360 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( -160, 360 )
nodes/fragment/5/node = SubResource( 6 )
nodes/fragment/5/position = Vector2( 40, 340 )
nodes/fragment/7/node = SubResource( 15 )
nodes/fragment/7/position = Vector2( 20, 60 )
nodes/fragment/8/node = SubResource( 16 )
nodes/fragment/8/position = Vector2( 320, 260 )
nodes/fragment/9/node = SubResource( 17 )
nodes/fragment/9/position = Vector2( 680, 200 )
nodes/fragment/10/node = SubResource( 10 )
nodes/fragment/10/position = Vector2( 640, 480 )
nodes/fragment/11/node = SubResource( 11 )
nodes/fragment/11/position = Vector2( 900, 500 )
nodes/fragment/13/node = SubResource( 12 )
nodes/fragment/13/position = Vector2( 880, 700 )
nodes/fragment/14/node = SubResource( 13 )
nodes/fragment/14/position = Vector2( 1240, 380 )
nodes/fragment/15/node = SubResource( 14 )
nodes/fragment/15/position = Vector2( 1000, 240 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 2, 0, 7, 0, 7, 0, 8, 0, 4, 0, 5, 0, 8, 0, 9, 0, 5, 0, 8, 1, 8, 0, 10, 0, 13, 0, 14, 1, 10, 0, 11, 0, 11, 0, 15, 1, 9, 0, 15, 0, 15, 0, 14, 0, 14, 0, 0, 5, 9, 0, 0, 1 )

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )

[node name="DisolveDemo" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0 )
mesh = SubResource( 1 )
material/0 = null

[node name="MeshInstance2" type="MeshInstance" parent="."]
transform = Transform( 0.5, 0, 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0.5, 0 )
mesh = SubResource( 2 )
material/0 = SubResource( 9 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.421257, 0.644798, -0.637791, 0, 0.703233, 0.710959, 0.906941, -0.299497, 0.296242, -0.0307584, 2.16593, 6.39928 )
light_color = Color( 0.639216, 0.639216, 0.639216, 1 )
light_energy = 0.58
shadow_enabled = true

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.424275, 1.06926, 5.21896 )
